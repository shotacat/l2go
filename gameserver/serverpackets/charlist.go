package serverpackets

import (
	"github.com/frostwind/l2go/packets"
)

func CharListPacket() []byte {
	//name := "ebantrop"
	buffer := packets.NewBuffer()
	buffer.WriteByte(0x1f)                       // Packet type: CharList
	z := []byte{'c', 0x00, 'z', 0x00, 0x00, 0x00}
	buffer.Write([]byte{0x01, 0x00, 0x00, 0x00}) // количество чаров
	buffer.Write(z)// Name (Unicode строка)
	//buffer.Write([]byte{0x63, 0x00, 0x00, 0x00})// Name (Unicode строка)
	buffer.Write([]byte{0x89, 0x97, 0x01, 0x00}) // Char ID
	buffer.Write([]byte{0x63, 0x00, 0x00, 0x00})// Login (Unicode строка)
	buffer.Write([]byte{0x55, 0x55, 0x55, 0x55}) // Session ID
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Clan ID
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Sex
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Race
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // BaseClass ID
	buffer.Write([]byte{0x10, 0x00, 0x00, 0x00}) // Unknown
	buffer.Write([]byte{0x20, 0xEB, 0xFE, 0xFF}) // x
	buffer.Write([]byte{0x50, 0xED, 0x03, 0x00}) // y
	buffer.Write([]byte{0xF8, 0xF3, 0xFF, 0xFF}) // z
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5F, 0x40}) //  HP (вещественный тип - Double)
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x40}) //  MP (вещественный тип - Double)
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // SP
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // EXP
	buffer.Write([]byte{0x01, 0x00, 0x00, 0x00}) // LVL
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // KARMA
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // PK
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Under
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //REar
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LEar
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Neck
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //RFinger
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LFinger
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Head
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //RHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Gloves
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Chest
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Legs
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Feet
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Back
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LRHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Hair
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Under
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //REar
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LEar
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Neck
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //RFinger
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LFinger
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Head
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //RHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Gloves
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Chest
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Legs
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Feet
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Back
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //LRHand
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //Hair
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //HairStyle
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) //HairColor
	buffer.Write([]byte{0x00, 0x80, 0x5F, 0x40}) //Face
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x40}) //  MAX HP (вещественный тип - Double)
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}) //  MAX MP (вещественный тип - Double)
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // delete sec
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // class id
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // last used
	buffer.Write([]byte{0x00}) // enchant
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Unknown
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Unknown
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Unknown
	buffer.Write([]byte{0x00, 0x00, 0x00, 0x00}) // Session ID
	return buffer.Bytes()
}
